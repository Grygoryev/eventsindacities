{"version":3,"sources":["components/Navbar.js","actions/eventActions.js","components/filterPanel.js","components/Home.js","components/Event.js","App.js","serviceWorker.js","reducers/rootReducer.js","index.js"],"names":["withRouter","props","className","href","to","addToFavourite","id","type","FilterPanel","handlePriceUp","sortPriceToUp","handlePriceDown","sortPriceToDown","handleDefault","setDefault","showFavourites","onClick","this","Component","connect","state","events","dispatch","chooseCategory","Home","handleFavourite","e","preventDefault","target","closest","classList","contains","removeFavourite","remove","innerHTML","add","filterByCategory","eventsList","length","map","event","index","isFavouriteClass","isFavourite","isFavouriteLabel","eventPrice","price","eventCategories","categories","category","key","title","categoryName","Event","handleDelete","deleteEvent","history","push","handleAddingFavourite","eventImage","image","src","alt","description","body","ownProps","match","params","event_id","find","App","exact","path","component","Boolean","window","location","hostname","initeState","favouriteEvents","rootReducer","action","newEvents","filter","newList","includes","newOne","newFavouriteEvents","sortedToUpEvents","sort","a","b","newArr","slice","sortedToDownEvents","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94ba4db9.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink, withRouter } from 'react-router-dom';\n\nconst Navbar = (props) => {\n\n  return (\n    <nav className=\"nav-wrppaer purple\">\n      <div className=\"container\">\n        <a href='/' className=\"brand-logo\">what's around</a>\n        <ul className=\"right\">\n          <li><NavLink to=\"/\">Home</NavLink></li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nexport default withRouter(Navbar)","export const deleteEvent = id => {\n  return {\n    type: 'DELETE_EVENT',\n    id\n  }\n}\n\nexport const filterByCategory = categoryName => {\n  return {\n    type: 'FILTER_BY_CATEGORY',\n    categoryName\n  }\n}\n\nexport const addToFavourite = id => {\n  return {\n    type: 'ADD_FAVOURITE',\n    id\n  }\n}\n\nexport const removeFavourite = id => {\n  return {\n    type: 'REMOVE_FAVOURITE',\n    id\n  }\n}\n\nexport const showFavourites = () => {\n  return {\n    type: 'SHOW_FAVOURITES'\n  }\n}\n\nexport const setDefault = () => {\n  return {\n    type: 'SET_DEFAULT'\n  }\n}\n\nexport const sortPriceToUp = () => {\n  return {\n    type: 'SORT_PRICE_TO_UP'\n  }\n}\n\nexport const sortPriceToDown = () => {\n  return {\n    type: 'SORT_PRICE_TO_DOWN'\n  }\n}\n\nexport const chooseCategory = () => {\n  return {\n    type: 'CHOOSE_CATEGORY'\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sortPriceToUp } from '../actions/eventActions'\nimport { sortPriceToDown } from '../actions/eventActions'\nimport { setDefault } from '../actions/eventActions'\nimport { showFavourites } from '../actions/eventActions'\nimport { chooseCategory } from '../actions/eventActions'\n\nclass FilterPanel extends Component {\n\n  handlePriceUp = () => {\n    this.props.sortPriceToUp()\n  }\n\n  handlePriceDown = () => {\n    this.props.sortPriceToDown()\n  }\n\n  handleDefault = () => {\n    this.props.setDefault()\n  }\n\n  showFavourites = () => {\n    this.props.showFavourites()\n  }\n\n  render() { \n    \n    return (\n      <div className=\"filter-panel\">\n        <h6>Сортировать по:</h6>\n        <div className=\"filter-panel__options\">\n          <span className=\"filter-panel__option\" onClick={this.handlePriceDown}>Убыванию цены</span>\n          <span className=\"filter-panel__option\" onClick={this.handlePriceUp}>Возрастанию цены</span>\n          <span className=\"filter-panel__option\" onClick={this.showFavourites}>Избранное</span>\n          <span className=\"filter-panel__option\" onClick={this.handleDefault}>Сбросить сортировку</span>\n        </div>\n      </div>\n    )}\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    events: state.events\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sortPriceToUp: () => { dispatch(sortPriceToUp()) },\n    sortPriceToDown: () => { dispatch(sortPriceToDown()) },\n    setDefault: () => { dispatch(setDefault()) },\n    showFavourites: () => { dispatch(showFavourites()) },\n    chooseCategory: () => { dispatch(chooseCategory()) }\n  }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterPanel)","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport FilterPanel from './filterPanel'\nimport { addToFavourite, removeFavourite, filterByCategory } from '../actions/eventActions'\nimport StarIcon from '../icons/starIcon.js'\n\nclass Home extends Component {\n\n  handleFavourite = (e) => {\n    e.preventDefault()\n\n    if (e.target.closest('.event-card').classList.contains('--favourite')) {\n      this.props.removeFavourite(e.target.id)\n      e.target.closest('.event-card').classList.remove('--favourite')\n      e.target.innerHTML = 'Добавить избранное'\n    } else {\n      this.props.addToFavourite(e.target.id)\n      e.target.closest('.event-card').classList.add('--favourite')\n      e.target.innerHTML = 'Убрать из избранного'\n    }\n  }\n\n  filterByCategory = (e) => {\n    e.preventDefault()\n    this.props.filterByCategory(e.target.innerHTML)\n  }\n\n  render() {\n    const { events } = this.props\n    const eventsList = events.length ? ( \n      events.map( (event, index) => {\n        let isFavouriteClass = event.isFavourite ? '--favourite' : ''\n        let isFavouriteLabel = event.isFavourite ? 'Убрать из избранного' : 'Добавить в избранное'\n        let eventPrice = event.price === 0 ? `Бесплатно` : `${event.price} рублей` \n        let eventCategories = event.categories.map( (category, index) => {\n          return (\n            <span key={index}>#<span className=\"event-tag\" onClick={this.filterByCategory}>{ category }</span> </span>\n          )\n        })\n\n        return (\n          <Link to={'/' + event.id} key={index}>\n            <div className={\"post event-card card \" + isFavouriteClass} key={event.id}> \n              <div className=\"favourite-controls\">\n                  <div className=\"favourite-controls__option\" onClick={this.handleFavourite} id={event.id}>\n                    { isFavouriteLabel }\n                  </div> \n              </div>\n              \n                <div className=\"event-content\">\n                  <h5 className=\"event-card-title\">{event.title}</h5>\n                  <div className=\"card-content__info\">\n                    <div className=\"price\"><b>Стоимость:</b> { eventPrice } </div>\n                    <div className=\"categories\"><b>Теги: </b> { eventCategories } </div>\n                  </div>\n                </div>\n                \n            </div>\n          </Link>\n        )})\n      ) : (\n        <div className=\"center\"> No posts yet </div>\n      )\n   \n    return (\n      <div className=\"container events-container\">\n        <FilterPanel />\n        <div>{eventsList}</div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    events: state.events\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addToFavourite: id => { dispatch(addToFavourite(id)) },\n    removeFavourite: id => { dispatch(removeFavourite(id)) },\n    filterByCategory: categoryName => { dispatch(filterByCategory(categoryName)) }\n  }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { deleteEvent } from '../actions/eventActions'\nimport { addToFavourite } from '../actions/eventActions'\n\nclass Event extends Component {\n\n  handleDelete = () => {\n    this.props.deleteEvent(this.props.event.id)\n    this.props.history.push('/')\n  }\n\n  handleAddingFavourite = () => {\n    this.props.addToFavourite(this.props.event.id)\n    this.props.history.push('/')\n  }\n\n  render() {\n    let eventImage = this.props.event.image ? <img src={this.props.event.image} alt=\"eventPhoto\"/> : ''\n    const event = this.props.event ? (\n      <div className=\"post\">\n        <h4 className=\"post-title\">{this.props.event.title}</h4>\n        <p>{eventImage}</p>\n        <p>{this.props.event.description}</p>\n        <h5>Описание: </h5>\n        <p>{this.props.event.body}</p>\n      </div>\n    ) : (\n      <div> loading post... </div>\n    )\n    return (\n      <div className=\"container\">\n       { event }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.event_id\n  return {\n    event: state.events.find(event => id == event.id)\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteEvent: id => { dispatch(deleteEvent(id)) },\n    addToFavourite: id => { dispatch(addToFavourite(id) )}\n  }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(Event)","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Event from './components/Event'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/:event_id\" component={Event} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import events from '../events.json'\n\nconst initeState = {\n  events: [...events],\n  favouriteEvents: []\n}\n\nconst rootReducer = (state = initeState, action) => {\n  if (action.type === 'DELETE_EVENT') {\n    let newEvents = state.events.filter(event => action.id !== event.id)\n    \n    return {\n      ...state,\n      events: newEvents\n    }\n  }\n\n  if (action.type === 'FILTER_BY_CATEGORY') {\n    let newList = state.events.filter( event => {\n      return event.categories.includes(action.categoryName)\n    })\n    \n    return {\n      ...state,\n      events: newList\n    }\n  }\n\n  if (action.type === 'ADD_FAVOURITE') {\n    let newOne = state.events.find(event => event.id == action.id)\n    newOne.isFavourite = !newOne.isFavourite\n    let newFavouriteEvents = state.favouriteEvents.filter(event => event.id != newOne.id)\n    \n    return {\n      ...state,\n      favouriteEvents: [...newFavouriteEvents, newOne]\n    }\n  }\n\n  if (action.type === 'REMOVE_FAVOURITE') {\n    let target = state.events.find(event => event.id == action.id)\n    target.isFavourite = !target.isFavourite\n    let newFavouriteEvents = state.favouriteEvents.filter(event => action.id != event.id)\n\n    return {\n      ...state,\n      favouriteEvents: newFavouriteEvents\n    }\n  }\n\n  if (action.type === 'SHOW_FAVOURITES') {\n    let favouriteEvents = state.favouriteEvents\n\n    return {\n      ...state,\n      events: favouriteEvents\n    }\n  }\n\n  if (action.type == 'SET_DEFAULT') {\n    return {\n      ...state,\n      events\n    }\n  }\n\n  if (action.type == 'SORT_PRICE_TO_UP') {\n    let sortedToUpEvents = state.events.sort( (a, b) => a.price - b.price )\n    let newArr = sortedToUpEvents.slice(0) /* создаю новый массив, так как предыдущая запись только изменяет старый */\n    return {\n      ...state,\n      events: newArr\n    }\n  }\n\n  if (action.type == 'SORT_PRICE_TO_DOWN') {\n    let sortedToDownEvents = state.events.sort( (a, b) => b.price - a.price)\n    let newArr = sortedToDownEvents.slice(0)\n\n    return {\n      ...state,\n      events: newArr\n    }\n  }\n\n  return state\n}\n\nexport default rootReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}